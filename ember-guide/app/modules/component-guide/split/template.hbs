{{!-- {{outlet}} --}}
<h2><a id="4__84"></a>4. 拆分组件</h2>
<p>这个问题呢，是一个比较偏经验性的问题，比较考验编程人员的抽象能力，这方面我做的就不是很好，但是我刚好从高人那里学到了几招，就在这里班门弄斧一下。</p>
<h3><a id="_86"></a>数据结构与组件</h3>
<p>拿到设计图之后我们在充分了解了整个项目抑或是单个页面之后，我们需要考虑的是
	页面结构，随之而来的一个问题是数据结构，这是不分家的，你期望你的页面数据是如何展示的，你的数据结构就应该辅助你，或者数据结构是这样的，那你的页面结构也应该相应的这么做。在之前杨总告诉我们要开始做的 <a href="https://www.visual-paradigm.com/cn/guide/data-modeling/what-is-entity-relationship-diagram/">ERD
		图</a> 也可以再设计ERD图的同时思考一下页面的结构。虽不尽相同，但思想一致。</p>
<h3><a id="_88"></a>自己的做法</h3>
<p>在我们项目前期，我们不可能把一个组件抽离的完美，或者拆分页面结构非常清晰完整。也就是不要过早的过度拆分组件。我们也可以在一个route中将一个页面全写出来，在写的过程中我们就可以根据严谨的 html 结构
	以及业务需求来了解到一个组件如何拆分。这样做的前提就是写出来的 html 结构必须清晰。</p>
<p>在拆分的过程中，我们肯定会考虑到组件的复用与灵活性。这个可以考虑使用 <code>yield</code>反出一些数据或可定制的子组件使调用者更加灵活。</p>
<h3><a id="item_92"></a>是将数组传入组件还是将item传入组件</h3>
<p>这是我做组件过程中思考过的一个问题，就是在像 药品列表 这样的样式中。两种数据传入是会产生不同的影响的。</p>
<h3><a id="_94"></a>总结</h3>
<p>这个拆分组件过程写的比较浅显，更多的需要在项目中不断的思考。</p>